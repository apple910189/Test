aaalist1: 2 -> 4
aaalist2: 1 -> 3 -> 5
 ---------------- 初始 l1 l2
[0] list1: 2 -> 4
[0] list2: 1 -> 3 -> 5

    while 迴圈 0 (初始化 head 與 nowNode)
 ---------------- 比較 l1 l2, 如果 l2 較小, 把 l2 給 head, l2 往下走一格
[1] list2: 3 -> 5
[1] head        : 1 -> 3 -> 5
 ---------------- 把 nowNode 跟 head 設同一個地址
[2] list1: 2 -> 4
[2] list2: 3 -> 5
[2] nowNode     : 1 -> 3 -> 5
[2] head        : 1 -> 3 -> 5

    while 迴圈 1
 ---------------- 比較 l1 l2, 如果 l1 較小或等於, 把 l1 給 nowNode.next, l1 往下走一格
[3] list1: 4
[3] list2: 3 -> 5
[3] nowNode     : 1 -> 2 -> 4
[3] head        : 1 -> 2 -> 4
 ---------------- nowNode 往下走一格
[4] list1: 4
[4] list2: 3 -> 5
[4] nowNode     : 2 -> 4
[4] head        : 1 -> 2 -> 4

    while 迴圈 2
 ---------------- 比較 l1 l2, 如果 l2 較小, 把 l2 給 nowNode.next, l2 往下走一格
[3] list1: 4
[3] list2: 5
[3] nowNode     : 2 -> 3 -> 5
[3] head        : 1 -> 2 -> 3 -> 5
 ---------------- nowNode 往下走一格
[4] list1: 4
[4] list2: 5
[4] nowNode     : 3 -> 5
[4] head        : 1 -> 2 -> 3 -> 5

    while 迴圈 3
 ---------------- 比較 l1 l2, 如果 l1 較小或等於, 把 l1 給 nowNode.next, l1 往下走一格
[3] list1: 
[3] list2: 5
[3] nowNode     : 3 -> 4
[3] head        : 1 -> 2 -> 3 -> 4
 ---------------- nowNode 往下走一格
[4] list1: 
[4] list2: 5
[4] nowNode     : 4
[4] head        : 1 -> 2 -> 3 -> 4

    while 迴圈 結束, l1 或 l2 有一個是空的
 ---------------- 剩下 l2, 把 l2 給 nowNode.next
[5] nowNode     : 4 -> 5
[5] head        : 1 -> 2 -> 3 -> 4 -> 5
merged: 1 -> 2 -> 3 -> 4 -> 5
bbblist1: 2 -> 3 -> 4 -> 5
bbblist2: 1 -> 2 -> 3 -> 4 -> 5
